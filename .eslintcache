[{"/Users/kings/Desktop/Socialnotes_React/src/index.js":"1","/Users/kings/Desktop/Socialnotes_React/src/Signup.js":"2","/Users/kings/Desktop/Socialnotes_React/src/App.js":"3","/Users/kings/Desktop/Socialnotes_React/src/reportWebVitals.js":"4","/Users/kings/Desktop/Socialnotes_React/src/Login.js":"5","/Users/kings/Desktop/Socialnotes_React/src/Addnotes.js":"6","/Users/kings/Desktop/Socialnotes_React/src/Notes.js":"7","/Users/kings/Desktop/Socialnotes_React/src/note.js":"8","/Users/kings/Desktop/Socialnotes_React/src/editnotes.js":"9","/Users/kings/Desktop/Socialnotes_React/src/Navbar.js":"10","/Users/kings/Desktop/Socialnotes_React/src/Home.js":"11"},{"size":537,"mtime":1610007220260,"results":"12","hashOfConfig":"13"},{"size":2897,"mtime":1610043583654,"results":"14","hashOfConfig":"13"},{"size":939,"mtime":1610042877266,"results":"15","hashOfConfig":"13"},{"size":362,"mtime":1610007220261,"results":"16","hashOfConfig":"13"},{"size":1938,"mtime":1610043669169,"results":"17","hashOfConfig":"13"},{"size":2410,"mtime":1610045673835,"results":"18","hashOfConfig":"13"},{"size":1939,"mtime":1610047641481,"results":"19","hashOfConfig":"13"},{"size":1501,"mtime":1610047269238,"results":"20","hashOfConfig":"13"},{"size":2301,"mtime":1610036386350,"results":"21","hashOfConfig":"13"},{"size":2317,"mtime":1610047861154,"results":"22","hashOfConfig":"13"},{"size":1098,"mtime":1610046633533,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"h1h0fr",{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"27"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/kings/Desktop/Socialnotes_React/src/index.js",["52"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport Signup from \"./Signup.js\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["53","54"],"/Users/kings/Desktop/Socialnotes_React/src/Signup.js",["55","56","57","58","59"],"import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport Navbar from \"./Navbar\";\n\nimport { useHistory } from \"react-router\";\n\nconst Signup = (props) => {\n  const history = useHistory();\n\n  const [name, changeName] = useState(\"\");\n  const [mobile, changeMobile] = useState(\"\");\n  const [password, changePassword] = useState(\"\");\n  const [email, changeEmail] = useState(\"\");\n  const [mobileError, changeMobileError] = useState(\"\");\n\n  var phoneno = /^\\d{10}$/;\n\n  const handleSignup = (e) => {\n    e.preventDefault();\n    console.log(\"SIGNUPP BUTTON CLICKED\");\n\n    // BACKEDNN OPERATION\n    axios\n      .post(\"http://localhost:8001/signup\", {\n        name: name,\n        mobile: mobile,\n        email: email,\n        password: password,\n      })\n      .then((response) => {\n        console.log(response);\n\n        if (response.data.signupSuccess == true) {\n          alert(\"Successfully Signed Up\");\n\n          console.log(props);\n          history.push(\"/login\");\n        } else {\n          alert(\"Singuped Failed\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleOnChange = (e) => {\n    console.log(e.target.value);\n  };\n\n  return (\n    <>\n      <Navbar />\n      <form onSubmit={(e) => handleSignup(e)} className=\"form singupform\">\n        <div class=\"mb-3\">\n          <label for=\"exampleInputName\" class=\"form-label\">\n            Name\n          </label>\n\n          <input\n            required\n            onChange={(e) => changeName(e.target.value)}\n            type=\"text\"\n            class=\"form-control\"\n            id=\"exampleInputName\"\n          />\n        </div>\n\n        <div class=\"mb-3\">\n          <label for=\"exampleInputMobile\" class=\"form-label\">\n            Mobile\n          </label>\n\n          <input\n            required\n            onChange={(e) => changeMobile(e.target.value)}\n            type=\"text\"\n            class=\"form-control\"\n            id=\"exampleInputMobile\"\n          />\n        </div>\n\n        <div class=\"mb-3\">\n          <label for=\"exampleInputEmail1\" class=\"form-label\">\n            Email address\n          </label>\n\n          <input\n            required\n            onChange={(e) => changeEmail(e.target.value)}\n            type=\"email\"\n            class=\"form-control\"\n            id=\"exampleInputEmail1\"\n          />\n        </div>\n\n        <div class=\"mb-3\">\n          <label for=\"exampleInputPassword1\" class=\"form-label\">\n            Password\n          </label>\n          <input\n            required\n            onChange={(e) => changePassword(e.target.value)}\n            type=\"password\"\n            class=\"form-control\"\n            id=\"exampleInputPassword1\"\n          />\n        </div>\n\n        <button type=\"submit\" class=\"btn btn-primary\">\n          Submit\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default Signup;\n\n//POST  emailId, password, console.log(response)\n","/Users/kings/Desktop/Socialnotes_React/src/App.js",["60","61"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Signup from \"./Signup.js\";\nimport Login from \"./Login.js\";\nimport Addnotes from \"./Addnotes.js\";\nimport Notes from \"./Notes.js\";\nimport Editnotes from \"./editnotes.js\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Home from \"./Home\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/signup\">\n            <Signup />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/addnotes\">\n            <Addnotes />\n          </Route>\n          <Route path=\"/notes\">\n            <Notes />\n          </Route>\n          <Route path=\"/editnotes\">\n            <Editnotes />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/kings/Desktop/Socialnotes_React/src/reportWebVitals.js",[],"/Users/kings/Desktop/Socialnotes_React/src/Login.js",["62","63"],"import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router\";\nimport Navbar from \"./Navbar\";\n\nconst Login = () => {\n  const history = useHistory();\n  const [email, changeEmail] = useState(\"\");\n  const [password, changePassword] = useState(\"\");\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    console.log(\"LOGIN BUTTON CLICKED\");\n\n    axios\n      .post(\"http://localhost:8001/login\", {\n        email: email,\n        password: password,\n      })\n      .then((response) => {\n        console.log(response);\n        if (response.data.loginSuccess == true) {\n          alert(\"Successfully Login\");\n          localStorage.setItem(\"userEmail\", email);\n          history.push(\"/notes\");\n        } else {\n          alert(\"Login Failed\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    console.log(email, password);\n  };\n  return (\n    <>\n      <Navbar />\n\n      <form onSubmit={(e) => handleLogin(e)} class=\"form\">\n        <div class=\"mb-3\">\n          <label for=\"exampleInputEmail1\" class=\"form-label\">\n            Email address\n          </label>\n          <input\n            required\n            onChange={(e) => changeEmail(e.target.value)}\n            type=\"email\"\n            class=\"form-control\"\n            id=\"exampleInputEmail1\"\n            aria-describedby=\"emailHelp\"\n          />\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"exampleInputPassword1\" class=\"form-label\">\n            Password\n          </label>\n          <input\n            required\n            onChange={(e) => changePassword(e.target.value)}\n            type=\"password\"\n            class=\"form-control\"\n            id=\"exampleInputPassword1\"\n          />\n        </div>\n\n        <button type=\"submit\" class=\"btn btn-primary\">\n          Login\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default Login;\n","/Users/kings/Desktop/Socialnotes_React/src/Addnotes.js",["64","65"],"/Users/kings/Desktop/Socialnotes_React/src/Notes.js",["66"],"/Users/kings/Desktop/Socialnotes_React/src/note.js",["67","68"],"/Users/kings/Desktop/Socialnotes_React/src/editnotes.js",["69"],"import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { useHistory } from \"react-router\";\n\nconst Editnotes = (props) => {\n  const history = useHistory();\n  const [heading, changeHeading] = useState(props.location.state.heading);\n  const [description, changeDescription] = useState(\n    props.location.state.description\n  );\n\n  //   const handleAddnotes = () => {\n  //     console.log(\"UPLOAD BUTTON CLICKED\");\n\n  //     axios\n  //       .post(\"http://localhost:8001/addnotes\", {\n  //         heading: heading,\n  //         description: description,\n  //         userEmail: \"disha@gmail.com\",\n  //       })\n  //       .then((response) => {\n  //         console.log(response);\n  //         if (response.data.addnotesSuccess == true) {\n  //           alert(\"Successfully Added Notes\");\n  //           history.push(\"/notes\");\n  //         } else {\n  //           alert(\"Added Notes Failed\");\n  //         }\n  //       })\n  //       .catch((err) => {\n  //         console.log(err);\n  //       });\n\n  //     // console.log(heading, description);\n  //   };\n\n  const handleNotesUpdate = () => {\n    axios\n      .post(`http://localhost:8001/update/${props.location.state.id}`, {\n        description: description,\n        heading: heading,\n      })\n      .then((response) => {\n        console.log(response);\n        alert(\"Successully Edited\");\n        history.push(\"/notes\");\n      })\n      .catch((err) => {\n        console.log(err);\n        alert(\"Edition Failed\");\n      });\n  };\n\n  return (\n    <div class=\"flex\">\n      <div class=\"fff\">\n        <form>\n          <input\n            value={heading}\n            onChange={(e) => changeHeading(e.target.value)}\n            class=\"mobile inputele\"\n            placeholder=\"Heading\"\n          />\n          <textarea\n            value={description}\n            onChange={(e) => changeDescription(e.target.value)}\n            class=\"password inputele textarea\"\n            placeholder=\"Descprition\"\n          ></textarea>\n\n          {/*<Link to=\"/notes\">*/}\n          <button onClick={() => handleNotesUpdate()} class=\"btn\" type=\"button\">\n            UPDATE\n          </button>\n          {/*</Link>*/}\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(Editnotes);\n","/Users/kings/Desktop/Socialnotes_React/src/Navbar.js",["70"],"/Users/kings/Desktop/Socialnotes_React/src/Home.js",["71"],{"ruleId":"72","severity":1,"message":"73","line":5,"column":8,"nodeType":"74","messageId":"75","endLine":5,"endColumn":14},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"72","severity":1,"message":"80","line":14,"column":10,"nodeType":"74","messageId":"75","endLine":14,"endColumn":21},{"ruleId":"72","severity":1,"message":"81","line":14,"column":23,"nodeType":"74","messageId":"75","endLine":14,"endColumn":40},{"ruleId":"72","severity":1,"message":"82","line":16,"column":7,"nodeType":"74","messageId":"75","endLine":16,"endColumn":14},{"ruleId":"83","severity":1,"message":"84","line":33,"column":41,"nodeType":"85","messageId":"86","endLine":33,"endColumn":43},{"ruleId":"72","severity":1,"message":"87","line":47,"column":9,"nodeType":"74","messageId":"75","endLine":47,"endColumn":23},{"ruleId":"72","severity":1,"message":"88","line":1,"column":8,"nodeType":"74","messageId":"75","endLine":1,"endColumn":12},{"ruleId":"72","severity":1,"message":"89","line":8,"column":50,"nodeType":"74","messageId":"75","endLine":8,"endColumn":54},{"ruleId":"72","severity":1,"message":"89","line":3,"column":10,"nodeType":"74","messageId":"75","endLine":3,"endColumn":14},{"ruleId":"83","severity":1,"message":"84","line":23,"column":40,"nodeType":"85","messageId":"86","endLine":23,"endColumn":42},{"ruleId":"72","severity":1,"message":"89","line":3,"column":10,"nodeType":"74","messageId":"75","endLine":3,"endColumn":14},{"ruleId":"83","severity":1,"message":"84","line":23,"column":43,"nodeType":"85","messageId":"86","endLine":23,"endColumn":45},{"ruleId":"72","severity":1,"message":"90","line":7,"column":5,"nodeType":"74","messageId":"75","endLine":7,"endColumn":18},{"ruleId":"72","severity":1,"message":"91","line":4,"column":7,"nodeType":"74","messageId":"75","endLine":4,"endColumn":12},{"ruleId":"83","severity":1,"message":"84","line":31,"column":42,"nodeType":"85","messageId":"86","endLine":31,"endColumn":44},{"ruleId":"72","severity":1,"message":"89","line":3,"column":10,"nodeType":"74","messageId":"75","endLine":3,"endColumn":14},{"ruleId":"92","severity":1,"message":"93","line":18,"column":9,"nodeType":"94","endLine":18,"endColumn":42},{"ruleId":"95","severity":1,"message":"96","line":12,"column":9,"nodeType":"94","endLine":16,"endColumn":10},"no-unused-vars","'Signup' is defined but never used.","Identifier","unusedVar","no-native-reassign",["97"],"no-negated-in-lhs",["98"],"'mobileError' is assigned a value but never used.","'changeMobileError' is assigned a value but never used.","'phoneno' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'handleOnChange' is assigned a value but never used.","'logo' is defined but never used.","'Link' is defined but never used.","'notes_initial' is assigned a value but never used.","'notes' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]